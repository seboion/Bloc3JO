V1 : Projet Django initié ;
     Database définie ;
     Application 'app' créée ;
     Models définis

V2 : Création des views dans views.py (fonctions qui traiteront les requetes et renverront les réponses appropriées) ;
     Configuration des URLs (liasion des vues aux URLs) ;
     Création de templates html simples pour débuter et tester ;
     Création du super user Django ;
     MAJ du fichier admin.py de l'app pour ajouter les models modifiables

V3 : Ajout du readme.md ;
     Ajout du changelog ;
     (Divers essais git) ;
     Ajout du fichier requirements.txt (avec pip freeze > requirements.txt)

V4 : ajout de la vue reserver_evenement
     et de ses annexes selon les cas de figure :
          besoin de billet si pas de billet pour reserver,
          confirmation de reservation,
          plus de stock si l'evenement n'est plus dispo
          reserver evenement (la page de reservation)
     Ajout des urls login et logout dans urls.py

     Ajout des vues et templates pour achater un billet, et reserver un evenement 
     la MAJ des stocks reste à faire, la navigation sur le site semble suivre... 
     A faire : harmoniser les fonctions de check de la connexion de l'user avec le décorateur Django?
     Améliorer la collecte de data des users dans la bdd

V5 : implémentation de la gestion des stocks :
     nombre de billet dispo par utilisateur
     nombre de billet MAJ après reservation et stock evenement MAJ après reservation
     vérification du nb de billet dispo OK verification du stock evenement OK
     clarification des modèles (suppression de redondance, ajout de champs)
     MAJ type de billet pour définir la quantité de billet individuels correspondant

V6 : création d'un fichier forms.py pour étendre le formulaire de requetes de données pour l'inscription d'un nouvel utilisateur
     amélioration de l'organisation des templates html (ordre, affichage de certains lien en fonction de si l'utilisateur est connecté ou non)
     amélioration de l'affichage profil
     amélioration de l'affichage de home
     ajout de la possibilité d'annuler une reservation
     Affichage des évènement sur la page d'accueil avec ajout du booleen a_la_une pour que l'admin puisse choisir ce qui passe sur la page d'accueil
     Ajout de l'affichage des photos liés au events
     Ajout de la vue des tickets avec le qrcode
     Ajout de la selection du nombre de billets à acheter
     Editer son profil pour changer adresse numero de tel etc

V7 : Ajout du MDC au Projet
     Ajout de la doc technique
     Modification du git ignore
     Amélioration de l'impossibilté de reserver ou annuler une reservation quand trop proche de la date de l'evenement (ajout d'une date limite dans le model)
     Amélioration de l'affichage du ticket de reservation
     Concatenation du QR code comme attendu par le client
     Ajout d'une image de test pour faciliter la création des évènements fictifs

V10 : Après des tests de deploiements : renvoi de la génération coté client en javascript : plus simple et plus de gestion des png générés
      Amélioration de la collecte des données utilisateurs : numéro de telephone sans lettre, nom prénom sans numéro... sur les pages inscriptions et profils
      Ajout de la possibilité de changer le mot de passe dans la section profil
      Modification de l'url par defaut du login pour eviter les erreur de redirection
      Autodéconnexion au bout de 5 min d'inactivité
      Modification du gitignore : ajout de lignes pour python



V12 : Création de la page récapitulatif avant de procéder au paiement
      Réalisation du mock simple pour "confirmer" le paiement
      masquage de l'url du mock
      ajout des @login_required sur les views où cela était necessaire


V13 : Page de vérification des tickets via qrcode ou saisie manuelle
      Complétion du reademe.md
      Utilisation de variables d'environnements pour ne pas avoir d'information sur la base de données dans le code
      Poursuite des tests

V14 : Réalisation du front end
      Amélioration des explications fourni sur les page html
      Amélioration du formattage du code
      Essais de sortie du mode DEBUG
      Externalisation de la SECRET_KEY de Django
      MAJ de la doc technique en V2

V15 : Poursuite de la réalisation des tests
      MAJ de la doc technique en V3 
      Travail sur le déploiement
      Génération de rapport détaillant le pourcentage de code couvert par le test avec coverage (MAJ du requirements.txt)
      correction de petits bugs trouvés grâces aux tests
      
V16 :
      Documentation technique V4
      Correction d'un problème de police
      MAJ complète du manuel utilisateur (readme.md)



               